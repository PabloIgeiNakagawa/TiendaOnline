@model DashboardViewModel
@using Newtonsoft.Json

<style>
    .dashboard-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 2rem;
        padding: 1.5rem;
        background-color: #f8f9fa;
    }

    .chart-card {
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        transition: transform 0.3s ease;
    }

        .chart-card:hover {
            transform: translateY(-5px);
        }

    .chart-title {
        font-size: 1.2rem;
        font-weight: 600;
        margin-bottom: 1rem;
        color: #343a40;
        text-align: center;
    }

    .chart-container {
        width: 100%;
        height: 300px;
        position: relative;
    }

    .metrics-card {
        grid-column: 1 / -1;
        background: white;
        border-radius: 10px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        padding: 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .metric-value {
        font-size: 1.8rem;
        font-weight: 700;
        color: #dc3545;
    }

    .metric-label {
        font-size: 1rem;
        color: #6c757d;
    }

    .period-selector {
        margin-bottom: 1.5rem;
        text-align: right;
    }

    select {
        padding: 0.5rem 1rem;
        border-radius: 5px;
        border: 1px solid #ced4da;
        background-color: white;
    }
</style>

<div class="dashboard-container">
    <div class="period-selector">
        <select id="periodoSelect" class="form-select">
            <option value="7">Últimos 7 días</option>
            <option value="30" selected>Últimos 30 días</option>
            <option value="90">Últimos 90 días</option>
        </select>
    </div>

    <div class="metrics-card">
        <div>
            <span class="metric-label">Pedidos cancelados</span>
            <div class="metric-value">@Model.CantidadCancelados (@Model.PorcentajeCancelados%)</div>
        </div>
    </div>

    <div class="chart-card">
        <div class="chart-title">Top Productos</div>
        <div class="chart-container">
            <canvas id="chartTopProductos"></canvas>
        </div>
    </div>

    <div class="chart-card">
        <div class="chart-title">Estado de Pedidos</div>
        <div class="chart-container">
            <canvas id="chartPedidosEstado"></canvas>
        </div>
    </div>

    <div class="chart-card">
        <div class="chart-title">Ventas por Categoría</div>
        <div class="chart-container">
            <canvas id="chartVentasCategoria"></canvas>
        </div>
    </div>

    <div class="chart-card">
        <div class="chart-title">Top Clientes</div>
        <div class="chart-container">
            <canvas id="chartTopClientes"></canvas>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Configuración común para los gráficos
        const chartConfig = {
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        boxWidth: 12,
                        padding: 20
                    }
                },
                tooltip: {
                    backgroundColor: 'rgba(0,0,0,0.8)',
                    bodyFont: {
                        size: 14
                    },
                    titleFont: {
                        size: 16,
                        weight: 'bold'
                    }
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    grid: {
                        drawBorder: false
                    }
                },
                x: {
                    grid: {
                        display: false
                    }
                }
            }
        };

        // Colores personalizados
        const colors = {
            blue: 'rgba(54, 162, 235, 0.7)',
            green: 'rgba(75, 192, 192, 0.7)',
            red: 'rgba(255, 99, 132, 0.7)',
            yellow: 'rgba(255, 206, 86, 0.7)',
            purple: 'rgba(153, 102, 255, 0.7)'
        };

                let chartTopProductos = new Chart(
            document.getElementById("chartTopProductos"),
            {
                type: 'bar',
                data: {
                    labels: @Html.Raw(JsonConvert.SerializeObject(Model.TopProductos)),
                    datasets: [{
                        label: 'Ventas',
                        data: @Html.Raw(JsonConvert.SerializeObject(Model.VentasPorProducto)),
                        backgroundColor: colors.blue,
                        borderColor: colors.blue,
                        borderWidth: 1,
                        borderRadius: 4
                    }]
                },
                options: {
                    ...chartConfig,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1, // Esto fuerza incrementos de 1 en 1
                                precision: 0  // Esto evita decimales
                            },
                            grid: {
                                drawBorder: false
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        ...chartConfig.plugins,
                        title: {
                            display: false
                        }
                    }
                }
            }
        );

        let chartPedidosEstado = new Chart(
            document.getElementById("chartPedidosEstado"),
            {
                type: 'doughnut',
                data: {
                    labels: @Html.Raw(JsonConvert.SerializeObject(Model.EstadosPedido)),
                    datasets: [{
                        label: 'Cantidad',
                        data: @Html.Raw(JsonConvert.SerializeObject(Model.CantidadPorEstado)),
                        backgroundColor: [
                            colors.blue,
                            colors.green,
                            colors.yellow,
                            colors.red
                        ],
                        borderWidth: 0
                    }]
                },
                options: {
                    ...chartConfig,
                    cutout: '70%',
                    plugins: {
                        ...chartConfig.plugins,
                        legend: {
                            ...chartConfig.plugins.legend,
                            position: 'right'
                        }
                    }
                }
            }
        );

        let chartVentasCategoria = new Chart(
            document.getElementById("chartVentasCategoria"),
            {
                type: 'bar',
                data: {
                    labels: @Html.Raw(JsonConvert.SerializeObject(Model.Categorias)),
                    datasets: [{
                        label: 'Ventas',
                        data: @Html.Raw(JsonConvert.SerializeObject(Model.VentasPorCategoria)),
                        backgroundColor: colors.red,
                        borderColor: colors.red,
                        borderWidth: 1,
                        borderRadius: 4
                    }]
                },
                options: chartConfig
            }
        );

                let chartTopClientes = new Chart(
            document.getElementById("chartTopClientes"),
            {
                type: 'bar',
                data: {
                    labels: @Html.Raw(JsonConvert.SerializeObject(Model.TopClientes)),
                    datasets: [{
                        label: 'Pedidos',
                        data: @Html.Raw(JsonConvert.SerializeObject(Model.PedidosPorCliente)),
                        backgroundColor: colors.green,
                        borderColor: colors.green,
                        borderWidth: 1,
                        borderRadius: 4
                    }]
                },
                options: {
                    ...chartConfig,
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1,
                                precision: 0
                            },
                            grid: {
                                drawBorder: false
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            }
        );

        // Manejo del cambio de período
        document.getElementById("periodoSelect").addEventListener("change", function () {
            const periodo = this.value;
            fetch(`/Reportes/DatosDashboardJson?periodo=${periodo}`)
                .then(res => res.json())
                .then(data => {
                    actualizarGrafico(chartTopProductos, data.topProductos, data.ventasPorProducto);
                    actualizarGrafico(chartPedidosEstado, data.estadosPedido, data.cantidadPorEstado);
                    actualizarGrafico(chartVentasCategoria, data.categorias, data.ventasPorCategoria);
                    actualizarGrafico(chartTopClientes, data.topClientes, data.pedidosPorCliente);

                    // Actualizar métrica de cancelados
                    document.querySelector(".metric-value").innerText =
                        `${data.cantidadCancelados} (${data.porcentajeCancelados}%)`;
                });
        });

        function actualizarGrafico(chart, labels, data) {
            chart.data.labels = labels;
            chart.data.datasets[0].data = data;
            chart.update();
        }
    </script>
}